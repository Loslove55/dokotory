{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nwindow.initMap = function () {//空メソッド\n}; //==========================================================onPageLoadの定義\n\n\nfunction onPageLoad(controller_and_actions, callback) {\n  document.addEventListener('turbolinks:load', function () {\n    var conditions = regularize(controller_and_actions);\n\n    if (!conditions) {\n      console.error('[onPageLoad] Unexpected arguments!');\n      return;\n    }\n\n    conditions.forEach(function (a_controller_and_action) {\n      var _a_controller_and_act = a_controller_and_action.split('#'),\n          _a_controller_and_act2 = _slicedToArray(_a_controller_and_act, 2),\n          controller = _a_controller_and_act2[0],\n          action = _a_controller_and_act2[1];\n\n      if (isOnPage(controller, action)) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction regularize(controller_and_actions) {\n  if (typeof controller_and_actions == 'string') {\n    return [controller_and_actions];\n  } else if (Object.prototype.toString.call(controller_and_actions).includes('Array') //controller_and_actions.isArray()\n  ) {\n      return controller_and_actions;\n    } else {\n    return null;\n  }\n}\n\nfunction isOnPage(controller, action) {\n  var selector = \"body[data-controller='\".concat(controller, \"']\");\n\n  if (!!action) {\n    selector += \"[data-action='\".concat(action, \"']\");\n  }\n\n  ;\n  return document.querySelectorAll(selector).length > 0;\n}\n\nfunction getPrefectureName(geoCodeResults) {\n  if (geoCodeResults.length <= 1) {\n    return null;\n  }\n\n  var result = geoCodeResults[0].address_components.filter(function (component) {\n    return component.types.indexOf(\"administrative_area_level_1\") > -1;\n  });\n  return result[0].long_name;\n}\n\nfunction getCountryName(geoCodeResults) {\n  var result = geoCodeResults[0].address_components.filter(function (component) {\n    return component.types.indexOf(\"country\") > -1;\n  });\n  return result[0].long_name;\n} //======================================================googleMapApi共通の定義\n\n\nvar target;\nvar prefectureSelector; //new ediit\n\nvar substitute; //new edit\n\nvar lat; // new edit\n\nvar lng; // new edit\n\nvar isMapEnabled; // new edit\n\nvar mapCenterSelector; // new edit\n\nvar map;\nvar marker;\nvar geocorder;\nvar tokyo = {\n  lat: 35.681167,\n  lng: 139.767052\n};\nvar prefectures = ['マップで選択してください', '北海道', '青森県', '岩手県', '宮城県', '秋田県', '山形県', '福島県', '茨城県', '栃木県', '群馬県', '埼玉県', '千葉県', '東京都', '神奈川県', '新潟県', '富山県', '石川県', '福井県', '山梨県', '長野県', '岐阜県', '静岡県', '愛知県', '三重県', '滋賀県', '京都府', '大阪府', '兵庫県', '奈良県', '和歌山県', '鳥取県', '島根県', '岡山県', '広島県', '山口県', '徳島県', '香川県', '愛媛県', '高知県', '福岡県', '佐賀県', '長崎県', '熊本県', '大分県', '宮崎県', '鹿児島県', '沖縄県'];\nvar locations = {\n  hokkaido: {\n    lat: 43.06417,\n    lng: 141.34694\n  },\n  aomori: {\n    lat: 40.814461,\n    lng: 140.739216\n  },\n  iwate: {\n    lat: 39.705242,\n    lng: 141.153436\n  },\n  miyagi: {\n    lat: 38.26889,\n    lng: 140.87194\n  },\n  akita: {\n    lat: 39.713219,\n    lng: 140.100595\n  },\n  yamagata: {\n    lat: 38.259241,\n    lng: 140.336422\n  },\n  fukushima: {\n    lat: 37.759840,\n    lng: 140.474085\n  },\n  ibaragi: {\n    lat: 36.364709,\n    lng: 140.472702\n  },\n  tochigi: {\n    lat: 36.556332,\n    lng: 139.880485\n  },\n  gunma: {\n    lat: 36.390499,\n    lng: 139.064527\n  },\n  saitama: {\n    lat: 35.860151,\n    lng: 139.644560\n  },\n  chiba: {\n    lat: 35.605114,\n    lng: 140.096384\n  },\n  tokyo: {\n    lat: 35.68944,\n    lng: 139.69167\n  },\n  kanagawa: {\n    lat: 35.44778,\n    lng: 139.6425\n  },\n  niigata: {\n    lat: 37.90222,\n    lng: 139.02361\n  },\n  toyama: {\n    lat: 36.69528,\n    lng: 137.21139\n  },\n  ishikawa: {\n    lat: 36.59444,\n    lng: 136.62556\n  },\n  fukui: {\n    lat: 36.06528,\n    lng: 136.22194\n  },\n  yamanashi: {\n    lat: 35.66389,\n    lng: 138.56833\n  },\n  nagano: {\n    lat: 36.65139,\n    lng: 138.18111\n  },\n  gifu: {\n    lat: 35.39111,\n    lng: 136.72222\n  },\n  shizuoka: {\n    lat: 34.97694,\n    lng: 138.38306\n  },\n  aichi: {\n    lat: 35.18028,\n    lng: 136.90667\n  },\n  mie: {\n    lat: 34.73028,\n    lng: 136.50861\n  },\n  shiga: {\n    lat: 35.00444,\n    lng: 135.86833\n  },\n  kyoto: {\n    lat: 35.02139,\n    lng: 135.75556\n  },\n  osaka: {\n    lat: 34.68639,\n    lng: 135.52\n  },\n  hyogo: {\n    lat: 34.69139,\n    lng: 135.18306\n  },\n  nara: {\n    lat: 34.68528,\n    lng: 135.83278\n  },\n  wakayama: {\n    lat: 34.22611,\n    lng: 135.1675\n  },\n  tottori: {\n    lat: 35.50361,\n    lng: 134.23833\n  },\n  shimane: {\n    lat: 35.47222,\n    lng: 133.05056\n  },\n  okayama: {\n    lat: 34.66167,\n    lng: 133.935\n  },\n  hiroshima: {\n    lat: 34.39639,\n    lng: 132.45944\n  },\n  yamaguchi: {\n    lat: 34.18583,\n    lng: 131.47139\n  },\n  tokushima: {\n    lat: 34.06583,\n    lng: 134.55944\n  },\n  kagawa: {\n    lat: 34.34028,\n    lng: 134.04333\n  },\n  ehime: {\n    lat: 33.84167,\n    lng: 132.76611\n  },\n  kochi: {\n    lat: 33.55972,\n    lng: 133.53111\n  },\n  fukuoka: {\n    lat: 33.60639,\n    lng: 130.41806\n  },\n  saga: {\n    lat: 33.24944,\n    lng: 130.29889\n  },\n  nagasaki: {\n    lat: 32.74472,\n    lng: 129.87361\n  },\n  kumamoto: {\n    lat: 32.78972,\n    lng: 130.74167\n  },\n  oita: {\n    lat: 33.23806,\n    lng: 131.6125\n  },\n  miyazaki: {\n    lat: 31.91111,\n    lng: 131.42389\n  },\n  kagoshima: {\n    lat: 31.56028,\n    lng: 130.55806\n  },\n  okinawa: {\n    lat: 26.2125,\n    lng: 127.68111\n  }\n};\n\nfunction initializeForm() {\n  if (isMapEnabled.checked) {\n    substitute.textContent = prefectures[prefectureSelector.options.selectedIndex];\n    substitute.style.display = 'inline-block';\n    mapCenterSelector.disabled = false;\n    prefectureSelector.hidden = true;\n    lat.readOnly = false;\n    lng.readOnly = false;\n    map.setOptions({\n      zoom: 12,\n      disableDefaultUI: false,\n      scrollwheel: true,\n      gestureHandling: 'auto',\n      clickableIcons: true\n    });\n  } else {\n    substitute.style.display = 'none';\n    mapCenterSelector.disabled = true;\n    mapCenterSelector.options.selectedIndex = 0;\n    prefectureSelector.hidden = false;\n    lat.readOnly = true;\n    lng.readOnly = true;\n    lat.value = null;\n    lng.value = null;\n    map.setOptions({\n      center: tokyo,\n      zoom: 12,\n      disableDefaultUI: true,\n      scrollwheel: false,\n      gestureHandling: 'none',\n      clickableIcons: false\n    });\n\n    if (marker) {\n      marker.setMap(null);\n    }\n  }\n}\n\nfunction initializeMap() {\n  var latlng;\n\n  if (lat.value && lng.value) {\n    latlng = {\n      lat: parseFloat(lat.value),\n      lng: parseFloat(lng.value)\n    };\n    map = new google.maps.Map(target, {\n      center: latlng,\n      zoom: 12\n    });\n    marker = new google.maps.Marker({\n      position: latlng,\n      map: map,\n      title: '発見場所',\n      animation: google.maps.Animation.DROP\n    });\n  } else {\n    latlng = tokyo;\n    map = new google.maps.Map(target, {\n      center: latlng,\n      zoom: 12\n    });\n  }\n}\n\nfunction panMapToSelectedLocation(e) {\n  console.log(e.target.options.selectedIndex);\n  var name = e.target.options[e.target.options.selectedIndex].value;\n  console.log(name);\n  console.log(locations[name]);\n  map.setOptions({\n    center: locations[name]\n  });\n}\n\nfunction setPinAndFillForm(e) {\n  //ピンどめの処理 //new edit\n  if (!isMapEnabled.checked) {\n    return;\n  }\n\n  if (marker) {\n    marker.setMap(null);\n    lat.value = null;\n    lng.value = null;\n  }\n\n  geocoder.geocode({\n    location: e.latLng\n  }, function (results, status) {\n    if (status !== 'OK') {\n      alert('Faild: ' + status + ':国内の陸地を選択してください');\n      return;\n    }\n\n    console.log(results);\n\n    if (getCountryName(results) != '日本') {\n      alert('国内の陸地を選択してください');\n      return;\n    }\n\n    if (getPrefectureName(results) == null) {\n      alert('国内の陸地を選択してください');\n      return;\n    }\n\n    if (results[0]) {\n      marker = new google.maps.Marker({\n        position: e.latLng,\n        map: map,\n        title: '発見場所',\n        animation: google.maps.Animation.DROP\n      });\n      lat.value = e.latLng.lat().toFixed(6);\n      lng.value = e.latLng.lng().toFixed(6);\n    }\n\n    prefectureSelector.options.selectedIndex = prefectures.indexOf(getPrefectureName(results));\n    substitute.textContent = getPrefectureName(results);\n    console.log(getCountryName(results));\n    console.log(getPrefectureName(results));\n  });\n} ///=======================================================article#new=======\n\n\nonPageLoad('articles#new', function () {\n  console.log('rendering_map...');\n  target = document.getElementById('mapTarget'); // new edit show board\n\n  prefectureSelector = document.getElementById('article_prefecture'); //new ediit\n\n  substitute = document.getElementById('substitute_prefecture'); //new edit\n\n  lat = document.getElementById('map_lat'); // new edit\n\n  lng = document.getElementById('map_lng'); // new edit\n\n  isMapEnabled = document.getElementById('map_is_enabled'); // new edit\n\n  mapCenterSelector = document.getElementById('map_location'); // new edit\n\n  geocoder = new google.maps.Geocoder(); //new edit\n\n  initializeMap();\n  initializeForm();\n  isMapEnabled.addEventListener('change', function () {\n    initializeForm();\n    prefectureSelector.options.selectedIndex = 0;\n  });\n  mapCenterSelector.addEventListener('change', function (e) {\n    panMapToSelectedLocation(e);\n  });\n  map.addListener('click', function (e) {\n    setPinAndFillForm(e);\n  });\n  prefectureSelector.addEventListener('click', function () {\n    isMapEnabled.checked = false;\n    initializeForm();\n  }); // console.log('rendering_map...');\n  //\n  // target = document.getElementById('mapTarget');// new edit show board\n  // prefectureSelector = document.getElementById('article_prefecture');//new ediit\n  // substitute = document.getElementById('substitute_prefecture');//new edit\n  // lat = document.getElementById('map_lat'); // new edit\n  // lng = document.getElementById('map_lng'); // new edit\n  // isMapEnabled = document.getElementById('map_is_enabled');// new edit\n  // mapCenterSelector = document.getElementById('map_location');// new edit\n  //\n  // map = new google.maps.Map(target, {center: tokyo});// new\n  // geocoder = new google.maps.Geocoder() //new edit\n  //\n  // initializeForm();\n  //\n  // isMapEnabled.addEventListener('change',()=>{initializeForm()});\n  // mapCenterSelector.addEventListener('change', e =>{panMapToSelectedLocation(e)});\n  // map.addListener('click', e =>{setPinAndFillForm(e)});\n  // prefectureSelector.addEventListener('click',()=>{\n  //   isMapEnabled.checked = false;\n  //   initializeForm();\n  // });\n}); ///=======================================================article#edit=======\n\nonPageLoad('articles#edit', function () {\n  console.log('rendering_map...');\n  target = document.getElementById('mapTarget'); // new edit show board\n\n  prefectureSelector = document.getElementById('article_prefecture'); //new ediit\n\n  substitute = document.getElementById('substitute_prefecture'); //new edit\n\n  lat = document.getElementById('map_lat'); // new edit\n\n  lng = document.getElementById('map_lng'); // new edit\n\n  isMapEnabled = document.getElementById('map_is_enabled'); // new edit\n\n  mapCenterSelector = document.getElementById('map_location'); // new edit\n\n  geocoder = new google.maps.Geocoder(); //new edit\n\n  initializeMap();\n  initializeForm();\n  isMapEnabled.addEventListener('change', function () {\n    initializeForm();\n    prefectureSelector.options.selectedIndex = 0;\n  });\n  mapCenterSelector.addEventListener('change', function (e) {\n    panMapToSelectedLocation(e);\n  });\n  map.addListener('click', function (e) {\n    setPinAndFillForm(e);\n  });\n  prefectureSelector.addEventListener('click', function () {\n    isMapEnabled.checked = false;\n    initializeForm();\n  });\n});\nonPageLoad('articles#show', function () {\n  lat = document.getElementById('map_lat');\n  lng = document.getElementById('map_lng');\n  console.log(parseFloat(lat.value));\n  console.log(parseFloat(lng.value));\n});","map":{"version":3,"sources":["/dokotory/app/javascript/packs/google_map.js"],"names":["window","initMap","onPageLoad","controller_and_actions","callback","document","addEventListener","conditions","regularize","console","error","forEach","a_controller_and_action","split","controller","action","isOnPage","Object","prototype","toString","call","includes","selector","querySelectorAll","length","getPrefectureName","geoCodeResults","result","address_components","filter","component","types","indexOf","long_name","getCountryName","target","prefectureSelector","substitute","lat","lng","isMapEnabled","mapCenterSelector","map","marker","geocorder","tokyo","prefectures","locations","hokkaido","aomori","iwate","miyagi","akita","yamagata","fukushima","ibaragi","tochigi","gunma","saitama","chiba","kanagawa","niigata","toyama","ishikawa","fukui","yamanashi","nagano","gifu","shizuoka","aichi","mie","shiga","kyoto","osaka","hyogo","nara","wakayama","tottori","shimane","okayama","hiroshima","yamaguchi","tokushima","kagawa","ehime","kochi","fukuoka","saga","nagasaki","kumamoto","oita","miyazaki","kagoshima","okinawa","initializeForm","checked","textContent","options","selectedIndex","style","display","disabled","hidden","readOnly","setOptions","zoom","disableDefaultUI","scrollwheel","gestureHandling","clickableIcons","value","center","setMap","initializeMap","latlng","parseFloat","google","maps","Map","Marker","position","title","animation","Animation","DROP","panMapToSelectedLocation","e","log","name","setPinAndFillForm","geocoder","geocode","location","latLng","results","status","alert","toFixed","getElementById","Geocoder","addListener"],"mappings":"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","sourcesContent":["\nwindow.initMap = function() {\n  //空メソッド\n};\n\n//==========================================================onPageLoadの定義\n\nfunction onPageLoad(controller_and_actions, callback) {\n  document.addEventListener('turbolinks:load', ()=>{\n    const conditions = regularize(controller_and_actions);\n    if (!conditions) {\n      console.error('[onPageLoad] Unexpected arguments!');\n      return;\n    }\n    conditions.forEach(a_controller_and_action =>{\n      const [controller, action] = a_controller_and_action.split('#');\n      if (isOnPage(controller, action)) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction regularize(controller_and_actions) {\n  if (typeof controller_and_actions == 'string') {\n    return[controller_and_actions];\n  } else if (\n    Object.prototype.toString.call(controller_and_actions).includes('Array')\n    //controller_and_actions.isArray()\n  ) {\n    return controller_and_actions;\n  } else {\n    return null;\n  }\n}\n\nfunction isOnPage(controller, action) {\n  var selector = `body[data-controller='${controller}']`;\n  if (!!action) {\n    selector += `[data-action='${action}']`\n  };\n  return document.querySelectorAll(selector).length > 0;\n}\n\nfunction getPrefectureName(geoCodeResults) {\n  if (geoCodeResults.length <= 1) {\n    return null;\n  }\n  var result = geoCodeResults[0].address_components.filter(component => {\n    return component.types.indexOf(\"administrative_area_level_1\") > -1;\n  });\n  return result[0].long_name;\n}\n\nfunction getCountryName(geoCodeResults) {\n  var result = geoCodeResults[0].address_components.filter(component => {\n    return component.types.indexOf(\"country\") > -1;\n  });\n  return result[0].long_name;\n}\n\n//======================================================googleMapApi共通の定義\n\nvar target;\nvar prefectureSelector;//new ediit\nvar substitute;//new edit\nvar lat; // new edit\nvar lng; // new edit\nvar isMapEnabled;// new edit\nvar mapCenterSelector;// new edit\n\nvar map;\nvar marker;\nvar geocorder;\n\nvar tokyo = {lat: 35.681167, lng: 139.767052};\nvar prefectures = [\n  'マップで選択してください',\n  '北海道',\n  '青森県',\n  '岩手県',\n  '宮城県',\n  '秋田県',\n  '山形県',\n  '福島県',\n  '茨城県',\n  '栃木県',\n  '群馬県',\n  '埼玉県',\n  '千葉県',\n  '東京都',\n  '神奈川県',\n  '新潟県',\n  '富山県',\n  '石川県',\n  '福井県',\n  '山梨県',\n  '長野県',\n  '岐阜県',\n  '静岡県',\n  '愛知県',\n  '三重県',\n  '滋賀県',\n  '京都府',\n  '大阪府',\n  '兵庫県',\n  '奈良県',\n  '和歌山県',\n  '鳥取県',\n  '島根県',\n  '岡山県',\n  '広島県',\n  '山口県',\n  '徳島県',\n  '香川県',\n  '愛媛県',\n  '高知県',\n  '福岡県',\n  '佐賀県',\n  '長崎県',\n  '熊本県',\n  '大分県',\n  '宮崎県',\n  '鹿児島県',\n  '沖縄県',\n];\n\nvar locations = {\n  hokkaido: {lat: 43.06417, lng: 141.34694 },\n  aomori: {lat: 40.814461, lng: 140.739216 },\n  iwate: {lat: 39.705242, lng: 141.153436 },\n  miyagi: {lat: 38.26889, lng: 140.87194 },\n  akita: {lat: 39.713219, lng: 140.100595 },\n  yamagata: {lat: 38.259241, lng: 140.336422 },\n  fukushima: {lat: 37.759840, lng: 140.474085 },\n  ibaragi: {lat: 36.364709, lng: 140.472702 },\n  tochigi: {lat: 36.556332, lng: 139.880485 },\n  gunma: {lat: 36.390499, lng: 139.064527 },\n  saitama: {lat: 35.860151, lng: 139.644560 },\n  chiba: {lat: 35.605114, lng: 140.096384 },\n  tokyo: {lat: 35.68944, lng: 139.69167 },\n  kanagawa: {lat: 35.44778, lng: 139.6425 },\n  niigata: {lat: 37.90222, lng: 139.02361 },\n  toyama: {lat: 36.69528, lng: 137.21139 },\n  ishikawa: {lat: 36.59444, lng: 136.62556 },\n  fukui: {lat: 36.06528, lng: 136.22194 },\n  yamanashi: {lat: 35.66389, lng: 138.56833},\n  nagano: {lat: 36.65139, lng: 138.18111 },\n  gifu: {lat: 35.39111, lng: 136.72222 },\n  shizuoka: {lat: 34.97694, lng: 138.38306 },\n  aichi: {lat: 35.18028, lng: 136.90667 },\n  mie: {lat: 34.73028, lng: 136.50861 },\n  shiga: {lat: 35.00444, lng: 135.86833 },\n  kyoto: {lat: 35.02139, lng: 135.75556 },\n  osaka: {lat: 34.68639, lng: 135.52 },\n  hyogo: {lat: 34.69139, lng: 135.18306 },\n  nara: {lat: 34.68528, lng: 135.83278 },\n  wakayama: {lat: 34.22611, lng: 135.1675 },\n  tottori: {lat: 35.50361, lng: 134.23833 },\n  shimane: {lat: 35.47222, lng: 133.05056 },\n  okayama: {lat: 34.66167, lng: 133.935 },\n  hiroshima: {lat: 34.39639, lng: 132.45944 },\n  yamaguchi: {lat: 34.18583, lng: 131.47139 },\n  tokushima: {lat: 34.06583, lng: 134.55944 },\n  kagawa: {lat: 34.34028, lng: 134.04333 },\n  ehime: {lat: 33.84167, lng: 132.76611 },\n  kochi: {lat: 33.55972, lng: 133.53111 },\n  fukuoka: {lat: 33.60639, lng: 130.41806 },\n  saga: {lat: 33.24944, lng: 130.29889 },\n  nagasaki: {lat: 32.74472, lng: 129.87361 },\n  kumamoto: {lat: 32.78972, lng: 130.74167 },\n  oita: {lat: 33.23806, lng: 131.6125 },\n  miyazaki: {lat: 31.91111, lng: 131.42389 },\n  kagoshima: {lat: 31.56028, lng: 130.55806 },\n  okinawa: {lat: 26.2125, lng: 127.68111 },\n};\n\nfunction initializeForm() {\n  if (isMapEnabled.checked) {\n    substitute.textContent = prefectures[prefectureSelector.options.selectedIndex];\n    substitute.style.display = 'inline-block'\n    mapCenterSelector.disabled = false;\n    prefectureSelector.hidden = true;\n    lat.readOnly = false;\n    lng.readOnly = false;\n    map.setOptions({\n      zoom: 12,\n      disableDefaultUI: false,\n      scrollwheel: true,\n      gestureHandling: 'auto',\n      clickableIcons: true,\n    });\n  } else {\n    substitute.style.display = 'none'\n    mapCenterSelector.disabled = true;\n    mapCenterSelector.options.selectedIndex = 0;\n    prefectureSelector.hidden = false;\n    lat.readOnly = true;\n    lng.readOnly = true;\n    lat.value = null;\n    lng.value = null;\n    map.setOptions({\n      center: tokyo,\n      zoom: 12,\n      disableDefaultUI: true,\n      scrollwheel: false,\n      gestureHandling: 'none',\n      clickableIcons: false,\n    });\n    if (marker) {\n      marker.setMap(null);\n    }\n  }\n}\n\nfunction initializeMap() {\n  var latlng\n  if (lat.value && lng.value) {\n    latlng = {\n      lat: parseFloat(lat.value),\n      lng: parseFloat(lng.value),\n    }\n    map = new google.maps.Map(target, {\n      center: latlng,\n      zoom: 12\n    });\n    marker = new google.maps.Marker({\n      position: latlng,\n      map: map,\n      title: '発見場所',\n      animation: google.maps.Animation.DROP,\n    });\n  } else {\n    latlng = tokyo;\n    map = new google.maps.Map(target, {\n      center: latlng,\n      zoom: 12\n    });\n  }\n}\n\nfunction panMapToSelectedLocation(e) {\n    console.log(e.target.options.selectedIndex);\n    var name = e.target.options[e.target.options.selectedIndex].value;\n    console.log(name);\n    console.log(locations[name]);\n    map.setOptions({\n      center: locations[name]\n    });\n}\n\nfunction setPinAndFillForm(e) { //ピンどめの処理 //new edit\n  if (!isMapEnabled.checked) {\n    return;\n  }\n  if (marker) {\n    marker.setMap(null);\n    lat.value = null;\n    lng.value = null;\n  }\n  geocoder.geocode(\n    {location: e.latLng},\n    (results, status) => {\n      if (status !== 'OK') {\n        alert('Faild: ' + status + ':国内の陸地を選択してください');\n        return;\n      }\n      console.log(results);\n      if (getCountryName(results) != '日本') {\n        alert('国内の陸地を選択してください');\n        return;\n      }\n      if (getPrefectureName(results) == null) {\n        alert('国内の陸地を選択してください');\n        return;\n      }\n      if (results[0]) {\n        marker = new google.maps.Marker({\n          position: e.latLng,\n          map: map,\n          title: '発見場所',\n          animation: google.maps.Animation.DROP,\n        });\n        lat.value = e.latLng.lat().toFixed(6);\n        lng.value = e.latLng.lng().toFixed(6);\n      }\n      prefectureSelector.options.selectedIndex = prefectures.indexOf(getPrefectureName(results));\n      substitute.textContent = getPrefectureName(results);\n\n      console.log(getCountryName(results));\n      console.log(getPrefectureName(results));\n    })\n}\n\n///=======================================================article#new=======\n\nonPageLoad('articles#new', ()=>{\n  console.log('rendering_map...');\n\n  target = document.getElementById('mapTarget');// new edit show board\n  prefectureSelector = document.getElementById('article_prefecture');//new ediit\n  substitute = document.getElementById('substitute_prefecture');//new edit\n  lat = document.getElementById('map_lat'); // new edit\n  lng = document.getElementById('map_lng'); // new edit\n  isMapEnabled = document.getElementById('map_is_enabled');// new edit\n  mapCenterSelector = document.getElementById('map_location');// new edit\n  geocoder = new google.maps.Geocoder() //new edit\n\n  initializeMap();\n  initializeForm();\n\n  isMapEnabled.addEventListener('change',()=>{\n    initializeForm();\n    prefectureSelector.options.selectedIndex = 0;\n  });\n  mapCenterSelector.addEventListener('change', e =>{panMapToSelectedLocation(e)});\n  map.addListener('click', e =>{setPinAndFillForm(e)});\n  prefectureSelector.addEventListener('click',()=>{\n    isMapEnabled.checked = false;\n    initializeForm();\n  });\n  // console.log('rendering_map...');\n  //\n  // target = document.getElementById('mapTarget');// new edit show board\n  // prefectureSelector = document.getElementById('article_prefecture');//new ediit\n  // substitute = document.getElementById('substitute_prefecture');//new edit\n  // lat = document.getElementById('map_lat'); // new edit\n  // lng = document.getElementById('map_lng'); // new edit\n  // isMapEnabled = document.getElementById('map_is_enabled');// new edit\n  // mapCenterSelector = document.getElementById('map_location');// new edit\n  //\n  // map = new google.maps.Map(target, {center: tokyo});// new\n  // geocoder = new google.maps.Geocoder() //new edit\n  //\n  // initializeForm();\n  //\n  // isMapEnabled.addEventListener('change',()=>{initializeForm()});\n  // mapCenterSelector.addEventListener('change', e =>{panMapToSelectedLocation(e)});\n  // map.addListener('click', e =>{setPinAndFillForm(e)});\n  // prefectureSelector.addEventListener('click',()=>{\n  //   isMapEnabled.checked = false;\n  //   initializeForm();\n  // });\n\n});\n\n///=======================================================article#edit=======\n\nonPageLoad('articles#edit', ()=>{\n  console.log('rendering_map...');\n\n  target = document.getElementById('mapTarget');// new edit show board\n  prefectureSelector = document.getElementById('article_prefecture');//new ediit\n  substitute = document.getElementById('substitute_prefecture');//new edit\n  lat = document.getElementById('map_lat'); // new edit\n  lng = document.getElementById('map_lng'); // new edit\n  isMapEnabled = document.getElementById('map_is_enabled');// new edit\n  mapCenterSelector = document.getElementById('map_location');// new edit\n  geocoder = new google.maps.Geocoder() //new edit\n\n  initializeMap();\n  initializeForm();\n\n  isMapEnabled.addEventListener('change',()=>{\n    initializeForm();\n    prefectureSelector.options.selectedIndex = 0;\n  });\n  mapCenterSelector.addEventListener('change', e =>{panMapToSelectedLocation(e)});\n  map.addListener('click', e =>{setPinAndFillForm(e)});\n  prefectureSelector.addEventListener('click',()=>{\n    isMapEnabled.checked = false;\n    initializeForm();\n  });\n\n});\n\nonPageLoad('articles#show', ()=>{\n  lat = document.getElementById('map_lat');\n  lng = document.getElementById('map_lng');\n\n  console.log(parseFloat(lat.value));\n  console.log(parseFloat(lng.value));\n});\n"]},"metadata":{},"sourceType":"module"}