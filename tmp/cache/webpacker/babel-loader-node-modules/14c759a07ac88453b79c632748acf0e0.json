{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nwindow.initMap = function () {// なにもしない\n}; //onPageLoadの定義\n\n\nfunction onPageLoad(controller_and_actions, callback) {\n  document.addEventListener('turbolinks:load', function () {\n    var conditions = regularize(controller_and_actions);\n\n    if (!conditions) {\n      console.error('[onPageLoad] Unexpected arguments!');\n      return;\n    }\n\n    conditions.forEach(function (a_controller_and_action) {\n      var _a_controller_and_act = a_controller_and_action.split('#'),\n          _a_controller_and_act2 = _slicedToArray(_a_controller_and_act, 2),\n          controller = _a_controller_and_act2[0],\n          action = _a_controller_and_act2[1];\n\n      if (isOnPage(controller, action)) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction regularize(controller_and_actions) {\n  if (typeof controller_and_actions == 'string') {\n    return [controller_and_actions];\n  } else if (Object.prototype.toString.call(controller_and_actions).includes('Array') //controller_and_actions.isArray()\n  ) {\n      return controller_and_actions;\n    } else {\n    return null;\n  }\n}\n\nfunction isOnPage(controller, action) {\n  var selector = \"body[data-controller='\".concat(controller, \"']\");\n\n  if (!!action) {\n    selector += \"[data-action='\".concat(action, \"']\");\n  }\n\n  ;\n  return document.querySelectorAll(selector).length > 0;\n} //Mapの定義\n\n\nonPageLoad('home#top', function () {// p = document.createElement('p');\n  // p.textContent = 'onPageLoad';\n  // document.body.appendChild(p);\n});\nonPageLoad('articles#new', function () {\n  console.log('rendering_map...');\n  var target = document.getElementById('mapTarget');\n  var map;\n  var marker;\n  var tokyo = {\n    lat: 35.681167,\n    lng: 139.767052\n  };\n  var lat = document.getElementById('map_lat');\n  var lng = document.getElementById('map_lng');\n  var isEnabled = document.getElementById('map_is_enabled');\n\n  if (isEnabled.checked) {\n    console.log('on');\n  } else {\n    console.log('off');\n  }\n\n  isEnabled.addEventListener('onChange', function () {\n    //mapの有効無効を変更したとき\n    console.log(isEnabled.checked);\n  }); // var location = {\n  //   lat: parseFloat(taskLat.value),\n  //   lng: parseFloat(taskLng.value),\n  // }\n  // var taskLat = ;\n  // var taskLngt = ;\n\n  var geocorder = '';\n  map = new google.maps.Map(target, {\n    center: tokyo,\n    zoom: 15\n  });\n  map.addListener('click', function (e) {\n    if (marker) {\n      marker.setMap(null);\n    }\n\n    marker = new google.maps.Marker({\n      position: e.latLng,\n      map: map,\n      title: '発見場所',\n      animation: google.maps.Animation.DROP\n    });\n    lat.value = e.latLng.lat().toFixed(6);\n    lng.value = e.latLng.lng().toFixed(6);\n  });\n});","map":{"version":3,"sources":["/dokotory/app/javascript/packs/google_map.js"],"names":["window","initMap","onPageLoad","controller_and_actions","callback","document","addEventListener","conditions","regularize","console","error","forEach","a_controller_and_action","split","controller","action","isOnPage","Object","prototype","toString","call","includes","selector","querySelectorAll","length","log","target","getElementById","map","marker","tokyo","lat","lng","isEnabled","checked","geocorder","google","maps","Map","center","zoom","addListener","e","setMap","Marker","position","latLng","title","animation","Animation","DROP","value","toFixed"],"mappings":"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","sourcesContent":["\nwindow.initMap = function() {\n  // なにもしない\n};\n\n//onPageLoadの定義\n\nfunction onPageLoad(controller_and_actions, callback) {\n  document.addEventListener('turbolinks:load', ()=>{\n    const conditions = regularize(controller_and_actions);\n    if (!conditions) {\n      console.error('[onPageLoad] Unexpected arguments!');\n      return;\n    }\n    conditions.forEach(a_controller_and_action =>{\n      const [controller, action] = a_controller_and_action.split('#');\n      if (isOnPage(controller, action)) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction regularize(controller_and_actions) {\n  if (typeof controller_and_actions == 'string') {\n    return[controller_and_actions];\n  } else if (\n    Object.prototype.toString.call(controller_and_actions).includes('Array')\n    //controller_and_actions.isArray()\n  ) {\n    return controller_and_actions;\n  } else {\n    return null;\n  }\n}\n\nfunction isOnPage(controller, action) {\n  var selector = `body[data-controller='${controller}']`;\n  if (!!action) {\n    selector += `[data-action='${action}']`\n  };\n  return document.querySelectorAll(selector).length > 0;\n}\n\n//Mapの定義\n\nonPageLoad('home#top',()=>{\n  // p = document.createElement('p');\n  // p.textContent = 'onPageLoad';\n  // document.body.appendChild(p);\n});\n\nonPageLoad('articles#new', ()=>{\n\n  console.log('rendering_map...');\n  var target = document.getElementById('mapTarget');\n  var map;\n  var marker;\n  var tokyo = {lat: 35.681167, lng: 139.767052};\n  var lat = document.getElementById('map_lat');\n  var lng = document.getElementById('map_lng');\n\n  var isEnabled = document.getElementById('map_is_enabled');\n\n  if (isEnabled.checked) {\n    console.log('on');\n  } else {\n    console.log('off');\n  }\n\n  isEnabled.addEventListener('onChange',()=>{//mapの有効無効を変更したとき\n    console.log(isEnabled.checked);\n  });\n\n\n  // var location = {\n  //   lat: parseFloat(taskLat.value),\n  //   lng: parseFloat(taskLng.value),\n  // }\n  // var taskLat = ;\n  // var taskLngt = ;\n\n  var geocorder = '';\n\n  map = new google.maps.Map(target, {\n    center: tokyo,\n    zoom: 15\n  });\n\n  map.addListener('click', e =>{\n    if (marker) {\n      marker.setMap(null);\n    }\n    marker = new google.maps.Marker({\n      position: e.latLng,\n      map: map,\n      title: '発見場所',\n      animation: google.maps.Animation.DROP,\n    });\n    lat.value = e.latLng.lat().toFixed(6);\n    lng.value = e.latLng.lng().toFixed(6);\n  });\n});\n"]},"metadata":{},"sourceType":"module"}