{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nwindow.initMap = function () {//空メソッド\n}; //==========================================================onPageLoadの定義\n\n\nfunction onPageLoad(controller_and_actions, callback) {\n  document.addEventListener('turbolinks:load', function () {\n    var conditions = regularize(controller_and_actions);\n\n    if (!conditions) {\n      console.error('[onPageLoad] Unexpected arguments!');\n      return;\n    }\n\n    conditions.forEach(function (a_controller_and_action) {\n      var _a_controller_and_act = a_controller_and_action.split('#'),\n          _a_controller_and_act2 = _slicedToArray(_a_controller_and_act, 2),\n          controller = _a_controller_and_act2[0],\n          action = _a_controller_and_act2[1];\n\n      if (isOnPage(controller, action)) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction regularize(controller_and_actions) {\n  if (typeof controller_and_actions == 'string') {\n    return [controller_and_actions];\n  } else if (Object.prototype.toString.call(controller_and_actions).includes('Array') //controller_and_actions.isArray()\n  ) {\n      return controller_and_actions;\n    } else {\n    return null;\n  }\n}\n\nfunction isOnPage(controller, action) {\n  var selector = \"body[data-controller='\".concat(controller, \"']\");\n\n  if (!!action) {\n    selector += \"[data-action='\".concat(action, \"']\");\n  }\n\n  ;\n  return document.querySelectorAll(selector).length > 0;\n} //======================================================googleMapApi共通の定義\n\n\nvar target;\nvar prefectureSelector; //new ediit\n\nvar substitute; //new edit\n\nvar lat; // new edit\n\nvar lng; // new edit\n\nvar latLng;\nvar isMapEnabled; // new edit\n\nvar mapCenterSelector; // new edit\n\nvar map;\nvar marker;\nvar geocorder;\nvar tokyo = {\n  lat: 35.681167,\n  lng: 139.767052\n};\nvar prefectures = ['マップをクリックして選択してください', '北海道', '青森県', '岩手県', '宮城県', '秋田県', '山形県', '福島県', '茨城県', '栃木県', '群馬県', '埼玉県', '千葉県', '東京都', '神奈川県', '新潟県', '富山県', '石川県', '福井県', '山梨県', '長野県', '岐阜県', '静岡県', '愛知県', '三重県', '滋賀県', '京都府', '大阪府', '兵庫県', '奈良県', '和歌山県', '鳥取県', '島根県', '岡山県', '広島県', '山口県', '徳島県', '香川県', '愛媛県', '高知県', '福岡県', '佐賀県', '長崎県', '熊本県', '大分県', '宮崎県', '鹿児島県', '沖縄県'];\nvar locations = {\n  hokkaido: {\n    lat: 43.06417,\n    lng: 141.34694\n  },\n  aomori: {\n    lat: 40.814461,\n    lng: 140.739216\n  },\n  iwate: {\n    lat: 39.705242,\n    lng: 141.153436\n  },\n  miyagi: {\n    lat: 38.26889,\n    lng: 140.87194\n  },\n  akita: {\n    lat: 39.713219,\n    lng: 140.100595\n  },\n  yamagata: {\n    lat: 38.259241,\n    lng: 140.336422\n  },\n  fukushima: {\n    lat: 37.759840,\n    lng: 140.474085\n  },\n  ibaragi: {\n    lat: 36.364709,\n    lng: 140.472702\n  },\n  tochigi: {\n    lat: 36.556332,\n    lng: 139.880485\n  },\n  gunma: {\n    lat: 36.390499,\n    lng: 139.064527\n  },\n  saitama: {\n    lat: 35.860151,\n    lng: 139.644560\n  },\n  chiba: {\n    lat: 35.605114,\n    lng: 140.096384\n  },\n  tokyo: {\n    lat: 35.68944,\n    lng: 139.69167\n  },\n  kanagawa: {\n    lat: 35.44778,\n    lng: 139.6425\n  },\n  niigata: {\n    lat: 37.90222,\n    lng: 139.02361\n  },\n  toyama: {\n    lat: 36.69528,\n    lng: 137.21139\n  },\n  ishikawa: {\n    lat: 36.59444,\n    lng: 136.62556\n  },\n  fukui: {\n    lat: 36.06528,\n    lng: 136.22194\n  },\n  yamanashi: {\n    lat: 35.66389,\n    lng: 138.56833\n  },\n  nagano: {\n    lat: 36.65139,\n    lng: 138.18111\n  },\n  gifu: {\n    lat: 35.39111,\n    lng: 136.72222\n  },\n  shizuoka: {\n    lat: 34.97694,\n    lng: 138.38306\n  },\n  aichi: {\n    lat: 35.18028,\n    lng: 136.90667\n  },\n  mie: {\n    lat: 34.73028,\n    lng: 136.50861\n  },\n  shiga: {\n    lat: 35.00444,\n    lng: 135.86833\n  },\n  kyoto: {\n    lat: 35.02139,\n    lng: 135.75556\n  },\n  osaka: {\n    lat: 34.68639,\n    lng: 135.52\n  },\n  hyogo: {\n    lat: 34.69139,\n    lng: 135.18306\n  },\n  nara: {\n    lat: 34.68528,\n    lng: 135.83278\n  },\n  wakayama: {\n    lat: 34.22611,\n    lng: 135.1675\n  },\n  tottori: {\n    lat: 35.50361,\n    lng: 134.23833\n  },\n  shimane: {\n    lat: 35.47222,\n    lng: 133.05056\n  },\n  okayama: {\n    lat: 34.66167,\n    lng: 133.935\n  },\n  hiroshima: {\n    lat: 34.39639,\n    lng: 132.45944\n  },\n  yamaguchi: {\n    lat: 34.18583,\n    lng: 131.47139\n  },\n  tokushima: {\n    lat: 34.06583,\n    lng: 134.55944\n  },\n  kagawa: {\n    lat: 34.34028,\n    lng: 134.04333\n  },\n  ehime: {\n    lat: 33.84167,\n    lng: 132.76611\n  },\n  kochi: {\n    lat: 33.55972,\n    lng: 133.53111\n  },\n  fukuoka: {\n    lat: 33.60639,\n    lng: 130.41806\n  },\n  saga: {\n    lat: 33.24944,\n    lng: 130.29889\n  },\n  nagasaki: {\n    lat: 32.74472,\n    lng: 129.87361\n  },\n  kumamoto: {\n    lat: 32.78972,\n    lng: 130.74167\n  },\n  oita: {\n    lat: 33.23806,\n    lng: 131.6125\n  },\n  miyazaki: {\n    lat: 31.91111,\n    lng: 131.42389\n  },\n  kagoshima: {\n    lat: 31.56028,\n    lng: 130.55806\n  },\n  okinawa: {\n    lat: 26.2125,\n    lng: 127.68111\n  }\n};\n\nfunction getPrefectureName(geoCodeResults) {\n  if (geoCodeResults.length <= 1) {\n    return null;\n  }\n\n  var result = geoCodeResults[0].address_components.filter(function (component) {\n    return component.types.indexOf(\"administrative_area_level_1\") > -1;\n  });\n  return result[0].long_name;\n}\n\nfunction getCountryName(geoCodeResults) {\n  var result = geoCodeResults[0].address_components.filter(function (component) {\n    return component.types.indexOf(\"country\") > -1;\n  });\n  return result[0].long_name;\n}\n\nfunction initializeForm() {\n  if (isMapEnabled.checked) {\n    substitute.textContent = prefectures[prefectureSelector.options.selectedIndex];\n    substitute.style.display = 'inline-block';\n    mapCenterSelector.disabled = false;\n    prefectureSelector.hidden = true;\n    lat.readOnly = false;\n    lng.readOnly = false;\n    map.setOptions({\n      zoom: 12,\n      disableDefaultUI: false,\n      scrollwheel: true,\n      gestureHandling: 'auto',\n      clickableIcons: true\n    });\n  } else {\n    substitute.style.display = 'none';\n    mapCenterSelector.disabled = true;\n    mapCenterSelector.options.selectedIndex = 0;\n    prefectureSelector.hidden = false;\n    lat.readOnly = true;\n    lng.readOnly = true;\n    lat.value = null;\n    lng.value = null;\n    map.setOptions({\n      center: tokyo,\n      zoom: 12,\n      disableDefaultUI: true,\n      scrollwheel: false,\n      gestureHandling: 'none',\n      clickableIcons: false\n    });\n\n    if (marker) {\n      marker.setMap(null);\n    }\n  }\n}\n\nfunction initializeMap() {\n  var latlng;\n\n  if (lat.value && lng.value) {\n    latlng = {\n      lat: parseFloat(lat.value),\n      lng: parseFloat(lng.value)\n    };\n    map = new google.maps.Map(target, {\n      center: latlng,\n      zoom: 12\n    });\n    marker = new google.maps.Marker({\n      position: latlng,\n      map: map,\n      title: '発見場所',\n      animation: google.maps.Animation.DROP\n    });\n  } else {\n    latlng = tokyo;\n    map = new google.maps.Map(target, {\n      center: latlng,\n      zoom: 12\n    });\n  }\n}\n\nfunction panMapToSelectedLocation(selectElement) {\n  var name = selectElement.options[selectElement.options.selectedIndex].value;\n  map.setOptions({\n    center: locations[name]\n  });\n}\n\nfunction setMarker(latLng) {\n  marker = new google.maps.Marker({\n    position: latLng,\n    map: map,\n    title: '発見場所',\n    animation: google.maps.Animation.DROP\n  });\n}\n\nfunction setMarkerAndFillForm(latLng) {\n  //ピンどめの処理 //new edit\n  if (!isMapEnabled.checked) {\n    return;\n  }\n\n  if (marker) {\n    marker.setMap(null);\n    lat.value = null;\n    lng.value = null;\n  }\n\n  geocoder.geocode({\n    location: latLng\n  }, function (results, status) {\n    if (status !== 'OK') {\n      alert('Faild: ' + status + ':国内の陸地を選択してください');\n      return;\n    }\n\n    console.log(results);\n\n    if (getCountryName(results) != '日本') {\n      alert('国内の陸地を選択してください');\n      return;\n    }\n\n    if (getPrefectureName(results) == null) {\n      alert('国内の陸地を選択してください');\n      return;\n    }\n\n    if (results[0]) {\n      setMarker(latLng);\n      lat.value = latLng.lat().toFixed(6);\n      lng.value = latLng.lng().toFixed(6);\n    }\n\n    prefectureSelector.options.selectedIndex = prefectures.indexOf(getPrefectureName(results));\n    substitute.textContent = getPrefectureName(results);\n    console.log(getCountryName(results));\n    console.log(getPrefectureName(results));\n  });\n} ///=======================================================article#new=======\n\n\nonPageLoad('articles#new', function () {\n  console.log('rendering_map...');\n  target = document.getElementById('mapTarget'); // new edit show board\n\n  prefectureSelector = document.getElementById('article_prefecture'); //new ediit\n\n  substitute = document.getElementById('substitute_prefecture'); //new edit\n\n  lat = document.getElementById('map_lat'); // new edit\n\n  lng = document.getElementById('map_lng'); // new edit\n\n  isMapEnabled = document.getElementById('map_is_enabled'); // new edit\n\n  mapCenterSelector = document.getElementById('map_location'); // new edit\n\n  geocoder = new google.maps.Geocoder(); //new edit\n\n  initializeMap();\n  initializeForm();\n  isMapEnabled.addEventListener('change', function () {\n    initializeForm();\n    prefectureSelector.options.selectedIndex = 0;\n    substitute.textContent = 'マップをクリックして選択してください';\n  });\n  mapCenterSelector.addEventListener('change', function (e) {\n    panMapToSelectedLocation(e.target);\n  });\n  map.addListener('click', function (e) {\n    setMarkerAndFillForm(e.latLng);\n  });\n  prefectureSelector.addEventListener('click', function () {\n    isMapEnabled.checked = false;\n    initializeForm();\n  });\n}); ///=======================================================article#edit=======\n\nonPageLoad('articles#edit', function () {\n  console.log('rendering_map...');\n  target = document.getElementById('mapTarget'); // new edit show board\n\n  prefectureSelector = document.getElementById('article_prefecture'); //new ediit\n\n  substitute = document.getElementById('substitute_prefecture'); //new edit\n\n  lat = document.getElementById('map_lat'); // new edit\n\n  lng = document.getElementById('map_lng'); // new edit\n\n  isMapEnabled = document.getElementById('map_is_enabled'); // new edit\n\n  mapCenterSelector = document.getElementById('map_location'); // new edit\n\n  geocoder = new google.maps.Geocoder(); //new edit\n\n  initializeMap();\n  initializeForm();\n  isMapEnabled.addEventListener('change', function () {\n    initializeForm();\n    prefectureSelector.options.selectedIndex = 0;\n    substitute.textContent = 'マップをクリックして選択してください';\n  });\n  mapCenterSelector.addEventListener('change', function (e) {\n    panMapToSelectedLocation(e.target);\n  });\n  map.addListener('click', function (e) {\n    setMarkerAndFillForm(e.latLng);\n  });\n  prefectureSelector.addEventListener('click', function () {\n    isMapEnabled.checked = false;\n    initializeForm();\n  });\n});\nonPageLoad('articles#show', function () {\n  lat = document.getElementById('map_lat');\n  lng = document.getElementById('map_lng');\n  target = document.getElementById('mapTarget');\n  latLng = {\n    lat: parseFloat(lat.value),\n    lng: parseFloat(lng.value)\n  };\n  initializeMap();\n  setMarker(latLng);\n  console.log(parseFloat(lat.value));\n  console.log(parseFloat(lng.value));\n});\nonPageLoad('boards#show', function () {\n  lat = document.getElementById('map_lat');\n  lng = document.getElementById('map_lng');\n  target = document.getElementById('mapTarget');\n  latLng = {\n    lat: parseFloat(lat.value),\n    lng: parseFloat(lng.value)\n  };\n  initializeMap();\n  setMarker(latLng);\n  console.log(parseFloat(lat.value));\n  console.log(parseFloat(lng.value));\n});\nonPageLoad('articles#map', function () {\n  console.log(gon.maps);\n  var search = document.getElementById('searchButton');\n  var loadArticle = document.getElementById('loadArticle'); // var prefectureButtons = document.querySelectorAll('.prefecture_button');\n\n  var markers = [];\n  var close = document.querySelector('.modal');\n  var mask = document.querySelector('.mask');\n  mapCenterSelector = document.getElementById('map_location');\n  target = document.getElementById('mapTarget');\n\n  if (locations[gon.centerPrefecture] != null) {\n    map = new google.maps.Map(target, {\n      center: locations[gon.centerPrefecture] || tokyo,\n      zoom: 9\n    });\n  }\n\n  if (gon.maps == null) {\n    console.log('null');\n  } else {\n    gon.maps.forEach(function (m) {\n      latlng = {\n        lat: parseFloat(m.lat),\n        lng: parseFloat(m.lng)\n      };\n      marker = new google.maps.Marker({\n        map: map,\n        position: latlng,\n        title: '発見場所',\n        animation: google.maps.Animation.DROP\n      });\n      marker.addListener('click', function () {\n        var url = '/articles/load_detail?article_id=' + m.article_id.toString();\n        loadArticle.href = url;\n        loadArticle.click();\n      });\n    });\n  }\n\n  mapCenterSelector.addEventListener('change', function () {\n    search.click();\n  });\n});","map":{"version":3,"sources":["/dokotory/app/javascript/packs/google_map.js"],"names":["window","initMap","onPageLoad","controller_and_actions","callback","document","addEventListener","conditions","regularize","console","error","forEach","a_controller_and_action","split","controller","action","isOnPage","Object","prototype","toString","call","includes","selector","querySelectorAll","length","target","prefectureSelector","substitute","lat","lng","latLng","isMapEnabled","mapCenterSelector","map","marker","geocorder","tokyo","prefectures","locations","hokkaido","aomori","iwate","miyagi","akita","yamagata","fukushima","ibaragi","tochigi","gunma","saitama","chiba","kanagawa","niigata","toyama","ishikawa","fukui","yamanashi","nagano","gifu","shizuoka","aichi","mie","shiga","kyoto","osaka","hyogo","nara","wakayama","tottori","shimane","okayama","hiroshima","yamaguchi","tokushima","kagawa","ehime","kochi","fukuoka","saga","nagasaki","kumamoto","oita","miyazaki","kagoshima","okinawa","getPrefectureName","geoCodeResults","result","address_components","filter","component","types","indexOf","long_name","getCountryName","initializeForm","checked","textContent","options","selectedIndex","style","display","disabled","hidden","readOnly","setOptions","zoom","disableDefaultUI","scrollwheel","gestureHandling","clickableIcons","value","center","setMap","initializeMap","latlng","parseFloat","google","maps","Map","Marker","position","title","animation","Animation","DROP","panMapToSelectedLocation","selectElement","name","setMarker","setMarkerAndFillForm","geocoder","geocode","location","results","status","alert","log","toFixed","getElementById","Geocoder","e","addListener","gon","search","loadArticle","markers","close","querySelector","mask","centerPrefecture","m","url","article_id","href","click"],"mappings":"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","sourcesContent":["\nwindow.initMap = function() {\n  //空メソッド\n};\n\n//==========================================================onPageLoadの定義\n\nfunction onPageLoad(controller_and_actions, callback) {\n  document.addEventListener('turbolinks:load', ()=>{\n    const conditions = regularize(controller_and_actions);\n    if (!conditions) {\n      console.error('[onPageLoad] Unexpected arguments!');\n      return;\n    }\n    conditions.forEach(a_controller_and_action =>{\n      const [controller, action] = a_controller_and_action.split('#');\n      if (isOnPage(controller, action)) {\n        callback();\n      }\n    });\n  });\n}\n\nfunction regularize(controller_and_actions) {\n  if (typeof controller_and_actions == 'string') {\n    return[controller_and_actions];\n  } else if (\n    Object.prototype.toString.call(controller_and_actions).includes('Array')\n    //controller_and_actions.isArray()\n  ) {\n    return controller_and_actions;\n  } else {\n    return null;\n  }\n}\n\nfunction isOnPage(controller, action) {\n  var selector = `body[data-controller='${controller}']`;\n  if (!!action) {\n    selector += `[data-action='${action}']`\n  };\n  return document.querySelectorAll(selector).length > 0;\n}\n\n//======================================================googleMapApi共通の定義\n\nvar target;\nvar prefectureSelector;//new ediit\nvar substitute;//new edit\nvar lat; // new edit\nvar lng; // new edit\nvar latLng;\nvar isMapEnabled;// new edit\nvar mapCenterSelector;// new edit\n\nvar map;\nvar marker;\nvar geocorder;\n\nvar tokyo = {lat: 35.681167, lng: 139.767052};\nvar prefectures = [\n  'マップをクリックして選択してください',\n  '北海道',\n  '青森県',\n  '岩手県',\n  '宮城県',\n  '秋田県',\n  '山形県',\n  '福島県',\n  '茨城県',\n  '栃木県',\n  '群馬県',\n  '埼玉県',\n  '千葉県',\n  '東京都',\n  '神奈川県',\n  '新潟県',\n  '富山県',\n  '石川県',\n  '福井県',\n  '山梨県',\n  '長野県',\n  '岐阜県',\n  '静岡県',\n  '愛知県',\n  '三重県',\n  '滋賀県',\n  '京都府',\n  '大阪府',\n  '兵庫県',\n  '奈良県',\n  '和歌山県',\n  '鳥取県',\n  '島根県',\n  '岡山県',\n  '広島県',\n  '山口県',\n  '徳島県',\n  '香川県',\n  '愛媛県',\n  '高知県',\n  '福岡県',\n  '佐賀県',\n  '長崎県',\n  '熊本県',\n  '大分県',\n  '宮崎県',\n  '鹿児島県',\n  '沖縄県',\n];\n\nvar locations = {\n  hokkaido: {lat: 43.06417, lng: 141.34694 },\n  aomori: {lat: 40.814461, lng: 140.739216 },\n  iwate: {lat: 39.705242, lng: 141.153436 },\n  miyagi: {lat: 38.26889, lng: 140.87194 },\n  akita: {lat: 39.713219, lng: 140.100595 },\n  yamagata: {lat: 38.259241, lng: 140.336422 },\n  fukushima: {lat: 37.759840, lng: 140.474085 },\n  ibaragi: {lat: 36.364709, lng: 140.472702 },\n  tochigi: {lat: 36.556332, lng: 139.880485 },\n  gunma: {lat: 36.390499, lng: 139.064527 },\n  saitama: {lat: 35.860151, lng: 139.644560 },\n  chiba: {lat: 35.605114, lng: 140.096384 },\n  tokyo: {lat: 35.68944, lng: 139.69167 },\n  kanagawa: {lat: 35.44778, lng: 139.6425 },\n  niigata: {lat: 37.90222, lng: 139.02361 },\n  toyama: {lat: 36.69528, lng: 137.21139 },\n  ishikawa: {lat: 36.59444, lng: 136.62556 },\n  fukui: {lat: 36.06528, lng: 136.22194 },\n  yamanashi: {lat: 35.66389, lng: 138.56833},\n  nagano: {lat: 36.65139, lng: 138.18111 },\n  gifu: {lat: 35.39111, lng: 136.72222 },\n  shizuoka: {lat: 34.97694, lng: 138.38306 },\n  aichi: {lat: 35.18028, lng: 136.90667 },\n  mie: {lat: 34.73028, lng: 136.50861 },\n  shiga: {lat: 35.00444, lng: 135.86833 },\n  kyoto: {lat: 35.02139, lng: 135.75556 },\n  osaka: {lat: 34.68639, lng: 135.52 },\n  hyogo: {lat: 34.69139, lng: 135.18306 },\n  nara: {lat: 34.68528, lng: 135.83278 },\n  wakayama: {lat: 34.22611, lng: 135.1675 },\n  tottori: {lat: 35.50361, lng: 134.23833 },\n  shimane: {lat: 35.47222, lng: 133.05056 },\n  okayama: {lat: 34.66167, lng: 133.935 },\n  hiroshima: {lat: 34.39639, lng: 132.45944 },\n  yamaguchi: {lat: 34.18583, lng: 131.47139 },\n  tokushima: {lat: 34.06583, lng: 134.55944 },\n  kagawa: {lat: 34.34028, lng: 134.04333 },\n  ehime: {lat: 33.84167, lng: 132.76611 },\n  kochi: {lat: 33.55972, lng: 133.53111 },\n  fukuoka: {lat: 33.60639, lng: 130.41806 },\n  saga: {lat: 33.24944, lng: 130.29889 },\n  nagasaki: {lat: 32.74472, lng: 129.87361 },\n  kumamoto: {lat: 32.78972, lng: 130.74167 },\n  oita: {lat: 33.23806, lng: 131.6125 },\n  miyazaki: {lat: 31.91111, lng: 131.42389 },\n  kagoshima: {lat: 31.56028, lng: 130.55806 },\n  okinawa: {lat: 26.2125, lng: 127.68111 },\n};\n\nfunction getPrefectureName(geoCodeResults) {\n  if (geoCodeResults.length <= 1) {\n    return null;\n  }\n  var result = geoCodeResults[0].address_components.filter(component => {\n    return component.types.indexOf(\"administrative_area_level_1\") > -1;\n  });\n  return result[0].long_name;\n}\n\nfunction getCountryName(geoCodeResults) {\n  var result = geoCodeResults[0].address_components.filter(component => {\n    return component.types.indexOf(\"country\") > -1;\n  });\n  return result[0].long_name;\n}\n\nfunction initializeForm() {\n  if (isMapEnabled.checked) {\n    substitute.textContent = prefectures[prefectureSelector.options.selectedIndex];\n    substitute.style.display = 'inline-block'\n    mapCenterSelector.disabled = false;\n    prefectureSelector.hidden = true;\n    lat.readOnly = false;\n    lng.readOnly = false;\n    map.setOptions({\n      zoom: 12,\n      disableDefaultUI: false,\n      scrollwheel: true,\n      gestureHandling: 'auto',\n      clickableIcons: true,\n    });\n  } else {\n    substitute.style.display = 'none'\n    mapCenterSelector.disabled = true;\n    mapCenterSelector.options.selectedIndex = 0;\n    prefectureSelector.hidden = false;\n    lat.readOnly = true;\n    lng.readOnly = true;\n    lat.value = null;\n    lng.value = null;\n    map.setOptions({\n      center: tokyo,\n      zoom: 12,\n      disableDefaultUI: true,\n      scrollwheel: false,\n      gestureHandling: 'none',\n      clickableIcons: false,\n    });\n    if (marker) {\n      marker.setMap(null);\n    }\n  }\n}\n\nfunction initializeMap() {\n  var latlng\n  if (lat.value && lng.value) {\n    latlng = {\n      lat: parseFloat(lat.value),\n      lng: parseFloat(lng.value),\n    }\n    map = new google.maps.Map(target, {\n      center: latlng,\n      zoom: 12\n    });\n    marker = new google.maps.Marker({\n      position: latlng,\n      map: map,\n      title: '発見場所',\n      animation: google.maps.Animation.DROP,\n    });\n  } else {\n    latlng = tokyo;\n    map = new google.maps.Map(target, {\n      center: latlng,\n      zoom: 12\n    });\n  }\n}\n\nfunction panMapToSelectedLocation(selectElement) {\n    var name = selectElement.options[selectElement.options.selectedIndex].value;\n    map.setOptions({\n      center: locations[name]\n    });\n}\n\nfunction setMarker(latLng) {\n  marker = new google.maps.Marker({\n    position: latLng,\n    map: map,\n    title: '発見場所',\n    animation: google.maps.Animation.DROP,\n  });\n}\n\nfunction setMarkerAndFillForm(latLng) { //ピンどめの処理 //new edit\n  if (!isMapEnabled.checked) {\n    return;\n  }\n  if (marker) {\n    marker.setMap(null);\n    lat.value = null;\n    lng.value = null;\n  }\n  geocoder.geocode(\n    {location: latLng},\n    (results, status) => {\n      if (status !== 'OK') {\n        alert('Faild: ' + status + ':国内の陸地を選択してください');\n        return;\n      }\n      console.log(results);\n      if (getCountryName(results) != '日本') {\n        alert('国内の陸地を選択してください');\n        return;\n      }\n      if (getPrefectureName(results) == null) {\n        alert('国内の陸地を選択してください');\n        return;\n      }\n      if (results[0]) {\n        setMarker(latLng);\n        lat.value = latLng.lat().toFixed(6);\n        lng.value = latLng.lng().toFixed(6);\n      }\n      prefectureSelector.options.selectedIndex = prefectures.indexOf(getPrefectureName(results));\n      substitute.textContent = getPrefectureName(results);\n\n      console.log(getCountryName(results));\n      console.log(getPrefectureName(results));\n    })\n}\n\n///=======================================================article#new=======\n\nonPageLoad('articles#new', ()=>{\n  console.log('rendering_map...');\n\n  target = document.getElementById('mapTarget');// new edit show board\n  prefectureSelector = document.getElementById('article_prefecture');//new ediit\n  substitute = document.getElementById('substitute_prefecture');//new edit\n  lat = document.getElementById('map_lat'); // new edit\n  lng = document.getElementById('map_lng'); // new edit\n  isMapEnabled = document.getElementById('map_is_enabled');// new edit\n  mapCenterSelector = document.getElementById('map_location');// new edit\n  geocoder = new google.maps.Geocoder() //new edit\n\n  initializeMap();\n  initializeForm();\n\n  isMapEnabled.addEventListener('change',()=>{\n    initializeForm();\n    prefectureSelector.options.selectedIndex = 0;\n    substitute.textContent = 'マップをクリックして選択してください';\n  });\n  mapCenterSelector.addEventListener('change', e =>{panMapToSelectedLocation(e.target)});\n  map.addListener('click', e =>{setMarkerAndFillForm(e.latLng)});\n  prefectureSelector.addEventListener('click',()=>{\n    isMapEnabled.checked = false;\n    initializeForm();\n  });\n});\n\n///=======================================================article#edit=======\n\nonPageLoad('articles#edit', ()=>{\n  console.log('rendering_map...');\n\n  target = document.getElementById('mapTarget');// new edit show board\n  prefectureSelector = document.getElementById('article_prefecture');//new ediit\n  substitute = document.getElementById('substitute_prefecture');//new edit\n  lat = document.getElementById('map_lat'); // new edit\n  lng = document.getElementById('map_lng'); // new edit\n  isMapEnabled = document.getElementById('map_is_enabled');// new edit\n  mapCenterSelector = document.getElementById('map_location');// new edit\n  geocoder = new google.maps.Geocoder() //new edit\n\n  initializeMap();\n  initializeForm();\n\n  isMapEnabled.addEventListener('change',()=>{\n    initializeForm();\n    prefectureSelector.options.selectedIndex = 0;\n    substitute.textContent = 'マップをクリックして選択してください';\n  });\n  mapCenterSelector.addEventListener('change', e =>{panMapToSelectedLocation(e.target)});\n  map.addListener('click', e =>{setMarkerAndFillForm(e.latLng)});\n  prefectureSelector.addEventListener('click',()=>{\n    isMapEnabled.checked = false;\n    initializeForm();\n  });\n\n});\n\nonPageLoad('articles#show', ()=>{\n  lat = document.getElementById('map_lat');\n  lng = document.getElementById('map_lng');\n  target = document.getElementById('mapTarget');\n  latLng = {lat: parseFloat(lat.value), lng: parseFloat(lng.value) }\n\n  initializeMap();\n  setMarker(latLng);\n  console.log(parseFloat(lat.value));\n  console.log(parseFloat(lng.value));\n});\n\nonPageLoad('boards#show', ()=>{\n  lat = document.getElementById('map_lat');\n  lng = document.getElementById('map_lng');\n  target = document.getElementById('mapTarget');\n  latLng = {lat: parseFloat(lat.value), lng: parseFloat(lng.value) }\n\n  initializeMap();\n  setMarker(latLng);\n  console.log(parseFloat(lat.value));\n  console.log(parseFloat(lng.value));\n});\n\nonPageLoad('articles#map', ()=>{\n  console.log(gon.maps);\n\n  var search = document.getElementById('searchButton');\n  var loadArticle = document.getElementById('loadArticle');\n  // var prefectureButtons = document.querySelectorAll('.prefecture_button');\n  var markers = [];\n  var close = document.querySelector('.modal');\n  var mask = document.querySelector('.mask');\n\n  mapCenterSelector = document.getElementById('map_location');\n  target = document.getElementById('mapTarget');\n\n  if (locations[gon.centerPrefecture] != null) {\n    map = new google.maps.Map(target, {\n      center: locations[gon.centerPrefecture] || tokyo,\n      zoom: 9\n    });\n  }\n\n  if (gon.maps == null) {\n    console.log('null');\n  } else {\n    gon.maps.forEach((m)=>{\n      latlng = {\n        lat: parseFloat(m.lat),\n        lng: parseFloat(m.lng),\n      };\n      marker = new google.maps.Marker({\n        map: map,\n        position: latlng,\n        title: '発見場所',\n        animation: google.maps.Animation.DROP,\n      });\n\n      marker.addListener('click', ()=>{\n        var url = '/articles/load_detail?article_id=' + m.article_id.toString();\n        loadArticle.href = url\n        loadArticle.click();\n      });\n    });\n  }\n\n  mapCenterSelector.addEventListener('change',()=>{\n    search.click();\n  });\n\n});\n"]},"metadata":{},"sourceType":"module"}